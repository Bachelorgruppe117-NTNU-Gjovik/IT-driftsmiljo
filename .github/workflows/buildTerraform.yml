# Creates a terraform variables file and builds the infrastructure in Azure.
name: Build and apply

# Controls when the workflow will run
on:
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
 
jobs:
  # Append variables to .tfvars file
  buildTerraform:
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
    runs-on: ubuntu-latest
    env:
      REG_UNAME: ${{ secrets.REG_UNAME }}
      REG_TOKEN: ${{ secrets.REG_TOKEN }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Azure Login action
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      
      # Download variable files from Azure storage blob
      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: az storage blob download-batch --account-name envstoragegjovik246 --source variables --destination .

      
      # Set up python and run script for adding new values to variable file
      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 
      - run: python ./terraform/infrastruktur/scripts/add.py


      # Upload .tfvars file as artifact, will probably remove this
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraformVars
          path: |
            ./terraform/infrastruktur/terraform.tfvars.json
     
  # Runs the terraform code and builds the infrastructure in Azure
  apply:
    needs: buildTerraform
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: terraform/infrastruktur
      TF_VAR_postgreserver_admin_uname: ${{ secrets.DB_SERVER_UNAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Hent variabler
        uses: actions/download-artifact@v4
        with:
          name: terraformVars
          path: ${{env.WORKING_DIR}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "^1.3.7"
          terraform_wrapper: false
      
      - name: Terraform init
        id: init
        run: |
          cd $WORKING_DIR
          terraform init

      - name: Terraform plan
        id: plan
        run: |
          cd $WORKING_DIR
          pwd
          terraform plan -var-file=terraform.tfvars.json
      
      - name: Terraform apply
        run: |
          cd $WORKING_DIR
          terraform apply -auto-approve