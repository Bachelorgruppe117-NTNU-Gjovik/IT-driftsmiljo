# Creates a terraform variables file and builds the infrastructure in Azure.
name: Build and apply

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      STUDENT_FOLDER:
        required: true
        type: string
      DOCKER_IMAGE_NAME:
        required: false
        type: string
      DATABASE:
        required: true
        type: string
      type:
        required: true
        type: string

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Credentials for Azure service principle
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  STUDENT_FOLDER: ${{ inputs.STUDENT_FOLDER }}
  DOCKER_IMAGE_NAME: ${{ inputs.DOCKER_IMAGE_NAME }}
  DATABASE: ${{ inputs.DATABASE }}

 
jobs:
  # Append variables to .tfvars file
  buildTerraform:
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
      contents: read
    runs-on: ubuntu-latest
    env:
      # Github container registry
      REG_UNAME: ${{ secrets.REG_UNAME }}
      REG_TOKEN: ${{ secrets.REG_TOKEN }}
      # Input variables
      TF_VAR_postgreserver_admin_uname: ${{ secrets.DB_SERVER_UNAME }}
      TF_VAR_rootPath: ${{ github.workspace }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Get variables
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal --username ${{env.ARM_CLIENT_ID}} --password ${{env.ARM_CLIENT_SECRET}} --tenant ${{env.ARM_TENANT_ID}}
          az storage blob download --account-name envstoragegjovik246 --container-name variables --name containerObj.json --file './terraform/infrastruktur/containerObj.json' --auth-mode login
          az storage blob download --account-name envstoragegjovik246 --container-name variables --name databaseObj.json --file './terraform/infrastruktur/databaseObj.json' --auth-mode login
          az storage blob download --account-name envstoragegjovik246 --container-name variables --name terraform.tfvars.json --file './terraform/infrastruktur/terraform.tfvars.json' --auth-mode login

      - name: Check download
        run: ls -ltr ./terraform/infrastruktur

      
      # Set up python and run script for adding new values to variable file
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' 

      - name: Python add
        if: ${{inputs.type == 'ny'}}
        run: python ./terraform/infrastruktur/scripts/add.py

      - name: Python remove
        if: ${{inputs.type == 'fjern'}}
        run: python ./terraform/infrastruktur/scripts/remove.py 


      # Upload .tfvars file as artifact, will probably remove this
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraformVars
          path: |
            ./terraform/infrastruktur/terraform.tfvars.json
     
      # Runs the terraform code and builds the infrastructure in Azure
      

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "^1.3.7"
          terraform_wrapper: false
      
      - name: Terraform init
        id: init
        run: |
          cd terraform/infrastruktur
          terraform init

      - name: Terraform plan
        id: plan
        run: |
          cd terraform/infrastruktur
          pwd
          terraform plan -var-file=terraform.tfvars.json
      
      - name: Terraform apply
        run: |
          cd terraform/infrastruktur
          terraform apply -auto-approve