name: Build terraform code
# Bli calla av byggDocker
# test2

# Controls when the workflow will run
on:
  



  workflow_call:



  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  WORKING_DIR: ./

jobs:
  # Append terraform code for student program
  buildTerraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Pull
        run: |
          git pull origin testPipeline

      
    # Check if student program has a database
      - name: sjekk database
        id: database
        run: |
          if [[ -e ./studentOppgaver/${{env.STUDENT_FOLDER}}/database ]]; then 
            echo "DATABASE=true" >> $GITHUB_ENV; 
          else 
            echo "DATABASE=false" >> $GITHUB_ENV; fi

      # Add database
      - name: Append database
        id: appendDatabase
        if: ${{env.DATABASE == 'true'}}
        run: |
          echo "postdb = {" >> ./terraform/infrastruktur/terraform.tfvars
          for line in $(awk '{print $1}' ./terraform/oppgaver.txt); do
          echo -e "\t$line = {name = $line}" >> ./terraform/infrastruktur/terraform.tfvars
          done
          echo "}" >> ./terraform/infrastruktur/terraform.tfvars


    
      # Add resource group to .tfvars file
      - name: Append variables for resource group
        id: appendRGVariables
        run: |
          echo -e "rg_dynamic = {\n" >> ./terraform/infrastruktur/terraform.tfvars
          while IFS= read -r line; do
            echo "$line"
            name=$(echo "$line" | awk '{print $1}')
            echo -e "\t$name = {\n\t\tname = \"$name\"\n\t\tlocation = \"westeurope\"\n\t}" >> ./terraform/infrastruktur/terraform.tfvars
          done < ./terraform/oppgaver.txt
          echo "}" >> ./terraform/infrastruktur/terraform.tfvars
        
      # Add container to .tfvars file
      - name: Append variables for container
        id: appendContainerVariables
        run: |
          echo -e "container = {\n" >> ./terraform/infrastruktur/terraform.tfvars
          while IFS= read -r line; do
            echo "$line"
            name=$(echo $line | awk '{print $1}')
            image=$(echo $line | awk '{print $2}')
            echo -e "\t$name = {\n\t\tname = \"$name\"\n\t\timage=\"$image\"\n\t}" >> ./terraform/infrastruktur/terraform.tfvars
          done < ./terraform/oppgaver.txt
          echo "}" >> ./terraform/infrastruktur/terraform.tfvars


      # Upload .tfvars file as artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraformVars
          path: |
            ./terraform/infrastruktur/terraform.tfvars
     
  apply:
    env:
      WORKING_DIR: terraform/infrastruktur

    needs: buildTerraform
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Hent variabler
        uses: actions/download-artifact@v4
        with:
          name: terraformVars
          path: $WORKING_DIR

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "^1.3.7"
          terraform_wrapper: false
      
      - name: Terraform init
        id: init
        run: |
          terraform init
          working-directory: $WORKING_DIR

      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=terraform.tfvars
        working-directory: $WORKING_DIR
      
      - name: Terraform apply prod
        run: terraform apply -auto-approve
        working-directory: $WORKING_DIR